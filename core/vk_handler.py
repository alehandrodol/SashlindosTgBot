import logging
import random
from vk_api.vk_api import VkApiMethod

class VKHandler:
    def __init__(self, vk: VkApiMethod):
        self._vk = vk

    def _get_photo_url(self, photo: dict) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞."""
        # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Ç–∏–ø 'o' (–æ—Ä–∏–≥–∏–Ω–∞–ª), –µ—Å–ª–∏ –Ω–µ—Ç - –±–µ—Ä–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –ø–æ —à–∏—Ä–∏–Ω–µ
        photo_url = max(photo['sizes'], key=lambda x: x['width'])['url']
            
        return photo_url

    def get_random_photo(self, group_id: str, album_id: str) -> tuple[str, str]:
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–∑ –∞–ª—å–±–æ–º–∞ –≥—Ä—É–ø–ø—ã.
        
        Returns:
            tuple[str, str]: (photo_url, error_message)
        """
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –∞–ª—å–±–æ–º–∞
            size = self._vk.photos.get_albums(owner_id=group_id, album_ids=album_id)['items'][0]['size']

            if size == 0:
                return None, "–í –∞–ª—å–±–æ–º–µ –Ω–µ—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π üò¢"
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
            photo = self._vk.photos.get(
                owner_id=group_id,
                album_id=album_id,
                count=1,
                offset=random.randint(0, size - 1)
            )['items'][0]
            
            # –ü–æ–ª—É—á–∞–µ–º URL —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
            photo_url = self._get_photo_url(photo)
            logging.info(f"–ü–æ–ª—É—á–µ–Ω URL —Ñ–æ—Ç–æ: {photo_url}")
            
            return photo_url, None
            
        except Exception as e:
            error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: {e}"
            logging.error(error_msg)
            return None, error_msg 