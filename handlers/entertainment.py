# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import logging

# –°—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

# –õ–æ–∫–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
from core.vk_handler import VKHandler

router = Router()

@router.message(Command("picture"))
async def cmd_picture(message: Message, vk_handler: VKHandler, session):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–∑ –∞–ª—å–±–æ–º–∞ –≥—Ä—É–ø–ø—ã."""
    try:
        photo_url, error = await vk_handler.get_random_photo(
            session,
            message.from_user.id,
            message.chat.id,
            check_limit=True
        )
        
        if error:
            await message.reply(error)
            return
            
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
        await message.reply_photo(
            photo=photo_url,
            caption="–í–æ—Ç –≤–∞–º –ø–∏–¥–æ—Ä—Å–∫–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ üì∏"
        )
        
    except Exception as e:
        await message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.")
        logging.error(f"Error in cmd_picture: {e}") 