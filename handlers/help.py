from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


router = Router()

def get_main_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üìã –ë–∞–∑–∞", callback_data="activation"))
    builder.row(InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats"))
    builder.row(InlineKeyboardButton(text="üéÆ –§–∞–Ω", callback_data="fun"))
    builder.row(InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="close"))
    return builder.as_markup()

def get_activation_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±–∞–∑—ã."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="cmd_addme"))
    builder.row(InlineKeyboardButton(text="–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="cmd_disableme"))
    builder.row(InlineKeyboardButton(text="–°—Ç–∞—Ç—É—Å –ª–æ–∫–∞—Ç–æ—Ä–∞", callback_data="cmd_daily_status"))
    builder.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back"))
    return builder.as_markup()

def get_stats_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–†–µ–π—Ç–∏–Ω–≥", callback_data="cmd_ratings"))
    builder.row(InlineKeyboardButton(text="–ü–∏–¥–æ—Ä–∞—Å—ã", callback_data="cmd_masters"))
    builder.row(InlineKeyboardButton(text="–ü–∞—Å—Å–∏–≤—ã", callback_data="cmd_slaves"))
    builder.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back"))
    return builder.as_markup()

def get_fun_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π."""
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–ö–∞—Ä—Ç–∏–Ω–∫–∞", callback_data="cmd_picture"))
    builder.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back"))
    return builder.as_markup()

@router.message(Command("help"))
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    await message.reply(
        "–í–æ—Ç –ø–∏–¥–æ—Ä—Å–∫–æ–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥:",
        reply_markup=get_main_keyboard()
    )

@router.callback_query(F.data == "activation")
async def show_activation(callback: CallbackQuery):
    if callback.message.reply_to_message and callback.message.reply_to_message.from_user.id != callback.from_user.id:
        return
    await callback.message.edit_text(
        "–í–æ—Ç –ø–∏–¥–æ—Ä—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:",
        reply_markup=get_activation_keyboard()
    )

@router.callback_query(F.data == "stats")
async def show_stats(callback: CallbackQuery):
    if callback.message.reply_to_message and callback.message.reply_to_message.from_user.id != callback.from_user.id:
        return
    await callback.message.edit_text(
        "–í–æ—Ç –ø–∏–¥–æ—Ä—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:",
        reply_markup=get_stats_keyboard()
    )

@router.callback_query(F.data == "fun")
async def show_fun(callback: CallbackQuery):
    if callback.message.reply_to_message and callback.message.reply_to_message.from_user.id != callback.from_user.id:
        return
    await callback.message.edit_text(
        "–í–æ—Ç –ø–∏–¥–æ—Ä—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:",
        reply_markup=get_fun_keyboard()
    )

@router.callback_query(F.data == "back")
async def go_back(callback: CallbackQuery):
    if callback.message.reply_to_message and callback.message.reply_to_message.from_user.id != callback.from_user.id:
        return
    await callback.message.edit_text(
        "–í–æ—Ç –ø–∏–¥–æ—Ä—Å–∫–æ–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥:",
        reply_markup=get_main_keyboard()
    )

@router.callback_query(F.data == "close")
async def close_menu(callback: CallbackQuery):
    if callback.message.reply_to_message and callback.message.reply_to_message.from_user.id != callback.from_user.id:
        return
    await callback.message.reply_to_message.delete()
    await callback.message.delete()

@router.callback_query(F.data.startswith("cmd_"))
async def handle_command_button(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –∫–æ–º–∞–Ω–¥."""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫—É –Ω–∞–∂–∞–ª —Ç–æ—Ç –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑–≤–∞–ª –º–µ–Ω—é
    if callback.message.reply_to_message and callback.message.reply_to_message.from_user.id != callback.from_user.id:
        return

    command = callback.data.replace("cmd_", "")
    user_mention = f"@{callback.from_user.username if callback.from_user.username else callback.from_user.id}"
    await callback.message.answer(f"{user_mention}\n–≤–æ—Ç –Ω—É–∂–Ω–∞—è —Ç–µ–±–µ –∫–æ–º–∞–Ω–¥–∞: /{command}")
    await callback.message.reply_to_message.delete()
    await callback.message.delete()
    
