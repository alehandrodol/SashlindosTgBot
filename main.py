import asyncio
import logging
from aiogram import Bot, Dispatcher
from config import load_config
from handlers import registration, daily, stats, admin, entertainment, help
from database import DatabaseMiddleware, Database, DatabaseConfig
from core.scheduler import Scheduler
from core.middleware import SchedulerMiddleware, VKMiddleware
from core.generals import send_status_message

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

config_path = ".env"

async def main():
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥
    config = load_config(config_path)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
    bot = Bot(token=config.tg_bot.token)
    dp = Dispatcher()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db_config = DatabaseConfig(config)
    db = Database(db_config)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler = Scheduler(bot, db)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º VK API
    vk_middleware = VKMiddleware(config.vk.token)
    
    # –î–æ–±–∞–≤–ª—è–µ–º middleware
    dp.update.middleware(DatabaseMiddleware(db))
    dp.update.middleware(SchedulerMiddleware(scheduler))
    dp.update.middleware(vk_middleware)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–¥–∞—á–∏
    async for session in db.get_session():
        await scheduler.check_missed_dailies(session)
        await scheduler.setup_jobs(session)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã
    dp.include_router(registration.router)
    dp.include_router(daily.router)
    dp.include_router(stats.router)
    dp.include_router(admin.router)
    dp.include_router(entertainment.router)
    dp.include_router(help.router)

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞–∫–æ–ø–∏–≤—à–∏–µ—Å—è –∞–ø–¥–µ–π—Ç—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ–º polling
    await bot.delete_webhook(drop_pending_updates=True)
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
        await send_status_message(
            bot, 
            db, 
            "üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
        )

        await dp.start_polling(bot, allowed_updates=[
            "message",
            "chat_member",
            "my_chat_member",
            "callback_query"
        ])
    except Exception as e:
        logging.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise e
    finally:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏
        await send_status_message(
            bot, 
            db, 
            "üî¥ –ë–æ—Ç –≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ..."
        )
        await bot.session.close()

if __name__ == '__main__':
    asyncio.run(main()) 